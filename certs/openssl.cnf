[ ca ]
default_ca = CA_default

[ CA_default ]
# Directory and File location
dir                   = .
certs                 = $dir/certs
crl_dir               = $dir/crl
new_certs_dir         = $dir/newcerts
database              = $dir/index.txt
serial                = $dir/serial
RANDFILE              = $dir/private/.rand

# Root key and Root CA
private_key           = $dir/private/ca.key
certificate           = $dir/certs/ca.crt

# Cert revocations lists
crlnumber             = $dir/crlnumber
crl                   = $dir/crl/ca.crl.pem
crl_extensions        = crl_ext
default_crl_days      = 30

default_md            = sha256

name_opt              = ca_default
cert_opt              = ca_default
default_days          = 375
preserve              = no
policy                = policy_strict

[ policy_strict ]
countryName            = optional
stateOrProvinceName    = optional
organizationName       = match
organizationalUnitName = match
commonName             = supplied
emailAddress           = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional


[ req ]
default_bits       = 2048
distinguished_name = req_distinguished_name
string_mask        = utf8only

default_md         = sha256
x509_extensions    = v3_ca

[ req_distinguished_name ]
commonName                      = Common Name
0.organizationName              = Raccoon Ltd
organizationalUnitName          = DevOps
emailAddress                    = devops@raccoon.io

# Optionally, specify some defaults.
0.organizationName_default      = Raccoon Ltd
organizationalUnitName_default  = DevOps
emailAddress_default            = devops@raccoon.io

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true, pathlen:0
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints       = CA:FALSE
nsCertType             = client, email
nsComment              = "Vault Generated Client Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
keyUsage               = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints       = CA:FALSE
nsCertType             = server
nsComment              = "Vault Generated Server Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage               = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = serverAuth
[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier = keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints       = CA:FALSE
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
keyUsage               = critical, digitalSignature
extendedKeyUsage       = critical, OCSPSigning
